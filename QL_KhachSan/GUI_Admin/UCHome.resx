<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="circleSLTaiKhoan.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3ysxf3uUFSvsmrkWy46ZQsN56F7JGt+llRkYZ3ksZsX2uismStKQpj4UuZsfK35/JNnOQS7pjjT1RXSO
        zBp7iQ+bYwm1ve6mCS5nJ+wt1F6L7ciqPaKI1amleCa4nB2yt250LVJEc23optmFuYYKFQLX1b0muJwd
        o86JgqlrL4la4lDEEE0ULz0XzfaDIGtocV3miywVHZWyhgB237uonJDCgeqfvTXYkygbC6W4dzR03xO5
        p+l52Y2/oM6VFDfXtHYXkTcz0s208BxNy6qQKc2J3CJL2iyWENDmZi5mq8/VLGjyNmASzG2sVXe6J1qM
        1ko1aXFf8bUp3c4+zdeEuuzEWDKlRufFayI31RaqKf2gCinX0mJpi+kauJe3YqUFOpMWQbv5AYp4ERWN
        0+uZBTGXuLc6o1kcueoHKtxFFOcx8XxNtMs3SNR4xTKraiKwLhwbLtvYAmjjeffl9ZRIstdv6Ja/JMoq
        c0QMDLmmtiBPWoy3Yh0jUo6LWKLHlPRarCRiVuv9zX9PYmn7J49vlCwpEXkeKB7kUHbPUuqdKOJMIsWj
        pAAeWqfZV5FVyzRQEcWJn74sptwiQ56KMsCWyKFRAWqjRIktLlzUZ2KxpuJSanjQGqXt7XhN5cbv0UQu
        uk2to1kdzkLKaJbRkjeFY/VHEWVnrWxjlg6lgx5RAud9EosbB0/iKImCwsHI2MKVu3qpzVU6FV5bpGz2
        /sySf0j/jcwlzIx1vZjrqsK5JXYsiZFRjNqiaXBWk7PXtSI+RXGAb5gLa0rxRMwFvOp0uVbaizI9+X9m
        wW6fAxcSAAAAAAAA4BTevPk/FwptxxbH1Q0AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>